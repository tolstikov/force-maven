package ${outputPackage};

import com.sforce.soap.partner.sobject.SObject;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Fields {
    private final Objects objects;
    private final String sfName;
    private final List<Field> allFields = new ArrayList<Field>();
    private final Map<String, Field> byApiName = new HashMap<String, Field>();
    private final Map<String, Field> bySfName = new HashMap<String, Field>();
    private final Field<String> id;
    private final Field<String> name;
    private final Field<String> owner;
    private final Field<String> createdBy;
    private final Field<String> lastModifiedBy;

    public Fields(Objects objects, String sfName) {
        this.objects = objects;
        this.sfName = sfName;
        this.id = new Field<String>(this, "id", "Id", FieldType.STRING, false);
        addField(id);
        this.name = new Field<String>(this, "name", "Name", FieldType.STRING, false);
        addField(name);
        this.owner = new Field<String>(this, "owner", "Owner", FieldType.STRING, false);
        addField(owner);
        this.createdBy = new Field<String>(this, "createdBy", "CreatedBy", FieldType.STRING, false);
        addField(createdBy);
        this.lastModifiedBy = new Field<String>(this, "lastModifiedBy", "LastModifiedBy", FieldType.STRING, false);
        addField(lastModifiedBy);
    }

    protected void addField(Field field) {
        allFields.add(field);
        byApiName.put(field.apiName(), field);
        bySfName.put(field.sfName(), field);
    }

    public List<Field> allFields() {
        return Collections.unmodifiableList(allFields);
    }

    public Field byApiName(String apiName) {
        return byApiName.get(apiName);
    }

    public Field bySfName(String sfName) {
        return bySfName.get(sfName);
    }

    public String withNamespace(String name) {
        return objects.withNamespace(name);
    }

    public String apiName() {
        return objects.withNamespace(sfName);
    }

    public String self() {
        return apiName();
    }

    public String sfName() {
        return sfName;
    }

    public SObject newSObject() {
        SObject out = new SObject();
        out.setType(sfName());
        return out;
    }

    public Field<String> id() {
        return id;
    }

    public Field<String> name() {
        return name;
    }

    public Field<String> owner() {
        return owner;
    }

    public Field<String> createdBy() {
        return createdBy;
    }

    public Field<String> lastModifiedBy() {
        return lastModifiedBy;
    }
}
